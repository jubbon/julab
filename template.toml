# Required, name of the template
name = "Julab"

# Optional, longer form description
description = "A fully-featured DataScience ecosystem (JupyterLab)"

# Required, the version of the kickstart schema, currently only `1` is used
kickstart_version = 1

# Optional, the URL of the template
url = "https://google.com"

# Optional, a list of authors for this template
authors = [

]

# Optional, a list of keywords for this template
keywords = [

]

# Optional, those files will NOT be copied over when generating the template
# Use it to remove template-specific like its CI or its README/docs
ignore = [
    "README.md",
    "CONTRIBUTING.md",
    ".travis.yml",
    "docs",
]

# If this is set, kickstart will use this directory as a base for the template instead of
# the root directory. This is useful when your template has its own documentation/CI/etc and you don't want
# to ignore it.
# directory = "some-directory"

# Optional, a list of patterns. All files matching one of the patterns will
# be copied over without going through Tera.
# Use it for files that contain syntax similar to Tera for example
copy_without_render = [
    "*.html",
]

# Optional, a list of cleanup actions to do.
# All paths listed will be deleted if the `name` has the value `value` after
# the questions have been answered and the project generated.
cleanup = [
    { name = "spa", value = true, paths = ["{{ project_name }}/templates/"]},
    { name = "auth_method", value = "none", paths = ["{{ project_name }}/docs/auth.md"]},
]

# A list of variables, the schema is explained in detail below
[[variables]]
name = "project_name"
default = "my-project"
prompt = "What is the name of this project?"
validation = "^([a-zA-Z][a-zA-Z0-9_-]+)$"

[[variables]]
name = "python_version"
default = "3.10"
prompt = "Which version of Python?"
choices =  [
    "3.7",
    "3.8",
    "3.9",
    "3.10",
    "3.11",
]

[[variables]]
name = "jupyter"
default = true
prompt = "Do you want to add Jupyter integration?"

[[variables]]
name = "jupyter_port"
default = 8888
prompt = "Which port Jupyter uses?"
only_if = { name = "jupyter", value = true }

[[variables]]
name = "dl_framework"
default = "PyTorch"
prompt = "Deep learning framework"
choices =  [
    "PyTorch",
]

[[variables]]
name = "pip_hf_transformers"
default = false
prompt = "Use HuggingFace transformers library"
only_if = { name = "jupyter", value = true }